// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

/**
 * @title Loyaltytoken
 * @dev Create a loyalty points token called LoyaltyToken for customer rewards with minting capability...
 *
 * Generated by ChainSage at 2025-09-25T19:29:17.428874
 * Security features: mintable
 */
contract Loyaltytoken is ERC20, Ownable {

    constructor(address initialOwner)
        ERC20("Loyaltytoken", "LOYA")
        Ownable(initialOwner)
    {
        // Initial supply can be minted here if needed
        // _mint(initialOwner, initialSupply);
    }

    /**
     * @dev Mint new tokens. Only callable by owner.
     * @param to The address to mint tokens to
     * @param amount The amount of tokens to mint
     */
    function mint(address to, uint256 amount) public onlyOwner {
        _mint(to, amount);
    }

}